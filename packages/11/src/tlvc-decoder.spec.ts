import { deepStrictEqual } from 'assert';
import { TlvcDecoder } from './tlvc-decoder';

describe('tlvc-decoder', () => {
  it('emits messages with length and checksum removed', (done) => {
    const stream = new TlvcDecoder('test');
    const messages: [number, Buffer][] = [];

    stream.on('message', (type: number, msg: Buffer) => {
      messages.push([type, msg]);

      if (messages.length < 3) return;

      deepStrictEqual(messages[0], [0x52, Buffer.from([])]);
      deepStrictEqual(messages[1], [
        0x53,
        Buffer.from([0x00, 0x00, 0x30, 0x39]),
      ]);
      deepStrictEqual(messages[2], [
        0x50,
        Buffer.from([
          0x00, 0x00, 0x00, 0x0b, 0x70, 0x65, 0x73, 0x74, 0x63, 0x6f, 0x6e,
          0x74, 0x72, 0x6f, 0x6c, 0x00, 0x00, 0x00, 0x01,
        ]),
      ]);

      done();
    });

    [
      [
        0x52, 0x00, 0x00, 0x00, 0x06, 0xa8, 0x53, 0x00, 0x00, 0x00, 0x0a, 0x00,
        0x00, 0x30, 0x39, 0x3a, 0x50, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00,
        0x0b, 0x70, 0x65, 0x73, 0x74, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
        0x00, 0x00, 0x00, 0x01, 0xce,
      ],
    ].forEach((arr) => stream.write(Buffer.from(arr)));
  });
});
